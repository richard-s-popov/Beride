//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("TransportSystemModel", "FK_CarModels_CarBrands", "CarBrands", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TransportSystem.Domain.CarBrands), "CarModels", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportSystem.Domain.CarModels), true)]
[assembly: EdmRelationshipAttribute("TransportSystemModel", "FK_Cars_CarBrands", "CarBrands", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TransportSystem.Domain.CarBrands), "Cars", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportSystem.Domain.Cars), true)]
[assembly: EdmRelationshipAttribute("TransportSystemModel", "FK_Cars_CarColors", "CarColors", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TransportSystem.Domain.CarColors), "Cars", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportSystem.Domain.Cars), true)]
[assembly: EdmRelationshipAttribute("TransportSystemModel", "FK_Cars_CarModels", "CarModels", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TransportSystem.Domain.CarModels), "Cars", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportSystem.Domain.Cars), true)]
[assembly: EdmRelationshipAttribute("TransportSystemModel", "FK_Trips_Cars", "Cars", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TransportSystem.Domain.Cars), "Trips", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportSystem.Domain.Trips), true)]
[assembly: EdmRelationshipAttribute("TransportSystemModel", "FK_TripRoutes_Trips", "Trips", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TransportSystem.Domain.Trips), "TripRoutes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportSystem.Domain.TripRoutes), true)]
[assembly: EdmRelationshipAttribute("TransportSystemModel", "FK_Trips_TripStatus", "TripStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TransportSystem.Domain.TripStatus), "Trips", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportSystem.Domain.Trips), true)]
[assembly: EdmRelationshipAttribute("TransportSystemModel", "FK_Trips_TripType", "TripType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TransportSystem.Domain.TripType), "Trips", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportSystem.Domain.Trips), true)]
[assembly: EdmRelationshipAttribute("TransportSystemModel", "FK_Trips_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TransportSystem.Domain.Users), "Trips", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportSystem.Domain.Trips), true)]
[assembly: EdmRelationshipAttribute("TransportSystemModel", "FK_Trips_Users1", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TransportSystem.Domain.Users), "Trips", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TransportSystem.Domain.Trips), true)]

#endregion

namespace TransportSystem.Domain
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект Entities, используя строку соединения из раздела "Entities" файла конфигурации приложения.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Entities.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Entities.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<CarBrands> CarBrands
        {
            get
            {
                if ((_CarBrands == null))
                {
                    _CarBrands = base.CreateObjectSet<CarBrands>("CarBrands");
                }
                return _CarBrands;
            }
        }
        private ObjectSet<CarBrands> _CarBrands;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<CarColors> CarColors
        {
            get
            {
                if ((_CarColors == null))
                {
                    _CarColors = base.CreateObjectSet<CarColors>("CarColors");
                }
                return _CarColors;
            }
        }
        private ObjectSet<CarColors> _CarColors;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<CarModels> CarModels
        {
            get
            {
                if ((_CarModels == null))
                {
                    _CarModels = base.CreateObjectSet<CarModels>("CarModels");
                }
                return _CarModels;
            }
        }
        private ObjectSet<CarModels> _CarModels;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Cars> Cars
        {
            get
            {
                if ((_Cars == null))
                {
                    _Cars = base.CreateObjectSet<Cars>("Cars");
                }
                return _Cars;
            }
        }
        private ObjectSet<Cars> _Cars;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TripRoutes> TripRoutes
        {
            get
            {
                if ((_TripRoutes == null))
                {
                    _TripRoutes = base.CreateObjectSet<TripRoutes>("TripRoutes");
                }
                return _TripRoutes;
            }
        }
        private ObjectSet<TripRoutes> _TripRoutes;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Trips> Trips
        {
            get
            {
                if ((_Trips == null))
                {
                    _Trips = base.CreateObjectSet<Trips>("Trips");
                }
                return _Trips;
            }
        }
        private ObjectSet<Trips> _Trips;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TripStatus> TripStatus
        {
            get
            {
                if ((_TripStatus == null))
                {
                    _TripStatus = base.CreateObjectSet<TripStatus>("TripStatus");
                }
                return _TripStatus;
            }
        }
        private ObjectSet<TripStatus> _TripStatus;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TripType> TripType
        {
            get
            {
                if ((_TripType == null))
                {
                    _TripType = base.CreateObjectSet<TripType>("TripType");
                }
                return _TripType;
            }
        }
        private ObjectSet<TripType> _TripType;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet CarBrands. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCarBrands(CarBrands carBrands)
        {
            base.AddObject("CarBrands", carBrands);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet CarColors. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCarColors(CarColors carColors)
        {
            base.AddObject("CarColors", carColors);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet CarModels. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCarModels(CarModels carModels)
        {
            base.AddObject("CarModels", carModels);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Cars. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCars(Cars cars)
        {
            base.AddObject("Cars", cars);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TripRoutes. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTripRoutes(TripRoutes tripRoutes)
        {
            base.AddObject("TripRoutes", tripRoutes);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Trips. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTrips(Trips trips)
        {
            base.AddObject("Trips", trips);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TripStatus. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTripStatus(TripStatus tripStatus)
        {
            base.AddObject("TripStatus", tripStatus);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TripType. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTripType(TripType tripType)
        {
            base.AddObject("TripType", tripType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Users. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion

        #region Импортируемые функции
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        /// <param name="startPointGid">Нет доступной документации по метаданным.</param>
        /// <param name="endPointGid">Нет доступной документации по метаданным.</param>
        /// <param name="dateAt">Нет доступной документации по метаданным.</param>
        /// <param name="dateTo">Нет доступной документации по метаданным.</param>
        /// <param name="tripType">Нет доступной документации по метаданным.</param>
        /// <param name="tripStatus">Нет доступной документации по метаданным.</param>
        public ObjectResult<GetTrips_Result> GetTrips(global::System.String startPointGid, global::System.String endPointGid, Nullable<global::System.DateTime> dateAt, Nullable<global::System.DateTime> dateTo, Nullable<global::System.Int32> tripType, Nullable<global::System.Int32> tripStatus)
        {
            ObjectParameter startPointGidParameter;
            if (startPointGid != null)
            {
                startPointGidParameter = new ObjectParameter("StartPointGid", startPointGid);
            }
            else
            {
                startPointGidParameter = new ObjectParameter("StartPointGid", typeof(global::System.String));
            }
    
            ObjectParameter endPointGidParameter;
            if (endPointGid != null)
            {
                endPointGidParameter = new ObjectParameter("EndPointGid", endPointGid);
            }
            else
            {
                endPointGidParameter = new ObjectParameter("EndPointGid", typeof(global::System.String));
            }
    
            ObjectParameter dateAtParameter;
            if (dateAt.HasValue)
            {
                dateAtParameter = new ObjectParameter("DateAt", dateAt);
            }
            else
            {
                dateAtParameter = new ObjectParameter("DateAt", typeof(global::System.DateTime));
            }
    
            ObjectParameter dateToParameter;
            if (dateTo.HasValue)
            {
                dateToParameter = new ObjectParameter("DateTo", dateTo);
            }
            else
            {
                dateToParameter = new ObjectParameter("DateTo", typeof(global::System.DateTime));
            }
    
            ObjectParameter tripTypeParameter;
            if (tripType.HasValue)
            {
                tripTypeParameter = new ObjectParameter("TripType", tripType);
            }
            else
            {
                tripTypeParameter = new ObjectParameter("TripType", typeof(global::System.Int32));
            }
    
            ObjectParameter tripStatusParameter;
            if (tripStatus.HasValue)
            {
                tripStatusParameter = new ObjectParameter("TripStatus", tripStatus);
            }
            else
            {
                tripStatusParameter = new ObjectParameter("TripStatus", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetTrips_Result>("GetTrips", startPointGidParameter, endPointGidParameter, dateAtParameter, dateToParameter, tripTypeParameter, tripStatusParameter);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportSystemModel", Name="CarBrands")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarBrands : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта CarBrands.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static CarBrands CreateCarBrands(global::System.Int32 id, global::System.String name)
        {
            CarBrands carBrands = new CarBrands();
            carBrands.Id = id;
            carBrands.Name = name;
            return carBrands;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_CarModels_CarBrands", "CarModels")]
        public EntityCollection<CarModels> CarModels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarModels>("TransportSystemModel.FK_CarModels_CarBrands", "CarModels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarModels>("TransportSystemModel.FK_CarModels_CarBrands", "CarModels", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Cars_CarBrands", "Cars")]
        public EntityCollection<Cars> Cars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cars>("TransportSystemModel.FK_Cars_CarBrands", "Cars");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cars>("TransportSystemModel.FK_Cars_CarBrands", "Cars", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportSystemModel", Name="CarColors")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarColors : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта CarColors.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="code">Исходное значение свойства Code.</param>
        public static CarColors CreateCarColors(global::System.Int32 id, global::System.String name, global::System.String code)
        {
            CarColors carColors = new CarColors();
            carColors.Id = id;
            carColors.Name = name;
            carColors.Code = code;
            return carColors;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Cars_CarColors", "Cars")]
        public EntityCollection<Cars> Cars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cars>("TransportSystemModel.FK_Cars_CarColors", "Cars");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cars>("TransportSystemModel.FK_Cars_CarColors", "Cars", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportSystemModel", Name="CarModels")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarModels : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта CarModels.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="brandId">Исходное значение свойства BrandId.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static CarModels CreateCarModels(global::System.Int32 id, global::System.Int32 brandId, global::System.String name)
        {
            CarModels carModels = new CarModels();
            carModels.Id = id;
            carModels.BrandId = brandId;
            carModels.Name = name;
            return carModels;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandId
        {
            get
            {
                return _BrandId;
            }
            set
            {
                OnBrandIdChanging(value);
                ReportPropertyChanging("BrandId");
                _BrandId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BrandId");
                OnBrandIdChanged();
            }
        }
        private global::System.Int32 _BrandId;
        partial void OnBrandIdChanging(global::System.Int32 value);
        partial void OnBrandIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_CarModels_CarBrands", "CarBrands")]
        public CarBrands CarBrands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarBrands>("TransportSystemModel.FK_CarModels_CarBrands", "CarBrands").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarBrands>("TransportSystemModel.FK_CarModels_CarBrands", "CarBrands").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarBrands> CarBrandsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarBrands>("TransportSystemModel.FK_CarModels_CarBrands", "CarBrands");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarBrands>("TransportSystemModel.FK_CarModels_CarBrands", "CarBrands", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Cars_CarModels", "Cars")]
        public EntityCollection<Cars> Cars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cars>("TransportSystemModel.FK_Cars_CarModels", "Cars");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cars>("TransportSystemModel.FK_Cars_CarModels", "Cars", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportSystemModel", Name="Cars")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cars : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Cars.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="brandId">Исходное значение свойства BrandId.</param>
        /// <param name="modelId">Исходное значение свойства ModelId.</param>
        /// <param name="year">Исходное значение свойства Year.</param>
        /// <param name="colorId">Исходное значение свойства ColorId.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        public static Cars CreateCars(global::System.Int32 id, global::System.Int32 brandId, global::System.Int32 modelId, global::System.Int32 year, global::System.Int32 colorId, global::System.Boolean isDeleted)
        {
            Cars cars = new Cars();
            cars.Id = id;
            cars.BrandId = brandId;
            cars.ModelId = modelId;
            cars.Year = year;
            cars.ColorId = colorId;
            cars.IsDeleted = isDeleted;
            return cars;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandId
        {
            get
            {
                return _BrandId;
            }
            set
            {
                OnBrandIdChanging(value);
                ReportPropertyChanging("BrandId");
                _BrandId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BrandId");
                OnBrandIdChanged();
            }
        }
        private global::System.Int32 _BrandId;
        partial void OnBrandIdChanging(global::System.Int32 value);
        partial void OnBrandIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModelId
        {
            get
            {
                return _ModelId;
            }
            set
            {
                OnModelIdChanging(value);
                ReportPropertyChanging("ModelId");
                _ModelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModelId");
                OnModelIdChanged();
            }
        }
        private global::System.Int32 _ModelId;
        partial void OnModelIdChanging(global::System.Int32 value);
        partial void OnModelIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorId
        {
            get
            {
                return _ColorId;
            }
            set
            {
                OnColorIdChanging(value);
                ReportPropertyChanging("ColorId");
                _ColorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ColorId");
                OnColorIdChanged();
            }
        }
        private global::System.Int32 _ColorId;
        partial void OnColorIdChanging(global::System.Int32 value);
        partial void OnColorIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Cars_CarBrands", "CarBrands")]
        public CarBrands CarBrands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarBrands>("TransportSystemModel.FK_Cars_CarBrands", "CarBrands").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarBrands>("TransportSystemModel.FK_Cars_CarBrands", "CarBrands").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarBrands> CarBrandsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarBrands>("TransportSystemModel.FK_Cars_CarBrands", "CarBrands");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarBrands>("TransportSystemModel.FK_Cars_CarBrands", "CarBrands", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Cars_CarColors", "CarColors")]
        public CarColors CarColors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarColors>("TransportSystemModel.FK_Cars_CarColors", "CarColors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarColors>("TransportSystemModel.FK_Cars_CarColors", "CarColors").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarColors> CarColorsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarColors>("TransportSystemModel.FK_Cars_CarColors", "CarColors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarColors>("TransportSystemModel.FK_Cars_CarColors", "CarColors", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Cars_CarModels", "CarModels")]
        public CarModels CarModels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarModels>("TransportSystemModel.FK_Cars_CarModels", "CarModels").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarModels>("TransportSystemModel.FK_Cars_CarModels", "CarModels").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarModels> CarModelsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarModels>("TransportSystemModel.FK_Cars_CarModels", "CarModels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarModels>("TransportSystemModel.FK_Cars_CarModels", "CarModels", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Trips_Cars", "Trips")]
        public EntityCollection<Trips> Trips
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trips>("TransportSystemModel.FK_Trips_Cars", "Trips");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trips>("TransportSystemModel.FK_Trips_Cars", "Trips", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportSystemModel", Name="TripRoutes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TripRoutes : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TripRoutes.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="tripId">Исходное значение свойства TripId.</param>
        /// <param name="startPointGid">Исходное значение свойства StartPointGid.</param>
        /// <param name="startPointFullName">Исходное значение свойства StartPointFullName.</param>
        /// <param name="startPointShortName">Исходное значение свойства StartPointShortName.</param>
        /// <param name="endPointGid">Исходное значение свойства EndPointGid.</param>
        /// <param name="endPointFullName">Исходное значение свойства EndPointFullName.</param>
        /// <param name="endPointShortName">Исходное значение свойства EndPointShortName.</param>
        public static TripRoutes CreateTripRoutes(global::System.Int64 id, global::System.Int32 tripId, global::System.String startPointGid, global::System.String startPointFullName, global::System.String startPointShortName, global::System.String endPointGid, global::System.String endPointFullName, global::System.String endPointShortName)
        {
            TripRoutes tripRoutes = new TripRoutes();
            tripRoutes.Id = id;
            tripRoutes.TripId = tripId;
            tripRoutes.StartPointGid = startPointGid;
            tripRoutes.StartPointFullName = startPointFullName;
            tripRoutes.StartPointShortName = startPointShortName;
            tripRoutes.EndPointGid = endPointGid;
            tripRoutes.EndPointFullName = endPointFullName;
            tripRoutes.EndPointShortName = endPointShortName;
            return tripRoutes;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TripId
        {
            get
            {
                return _TripId;
            }
            set
            {
                OnTripIdChanging(value);
                ReportPropertyChanging("TripId");
                _TripId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TripId");
                OnTripIdChanged();
            }
        }
        private global::System.Int32 _TripId;
        partial void OnTripIdChanging(global::System.Int32 value);
        partial void OnTripIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StartPointGid
        {
            get
            {
                return _StartPointGid;
            }
            set
            {
                OnStartPointGidChanging(value);
                ReportPropertyChanging("StartPointGid");
                _StartPointGid = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StartPointGid");
                OnStartPointGidChanged();
            }
        }
        private global::System.String _StartPointGid;
        partial void OnStartPointGidChanging(global::System.String value);
        partial void OnStartPointGidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StartPointFullName
        {
            get
            {
                return _StartPointFullName;
            }
            set
            {
                OnStartPointFullNameChanging(value);
                ReportPropertyChanging("StartPointFullName");
                _StartPointFullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StartPointFullName");
                OnStartPointFullNameChanged();
            }
        }
        private global::System.String _StartPointFullName;
        partial void OnStartPointFullNameChanging(global::System.String value);
        partial void OnStartPointFullNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StartPointShortName
        {
            get
            {
                return _StartPointShortName;
            }
            set
            {
                OnStartPointShortNameChanging(value);
                ReportPropertyChanging("StartPointShortName");
                _StartPointShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StartPointShortName");
                OnStartPointShortNameChanged();
            }
        }
        private global::System.String _StartPointShortName;
        partial void OnStartPointShortNameChanging(global::System.String value);
        partial void OnStartPointShortNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EndPointGid
        {
            get
            {
                return _EndPointGid;
            }
            set
            {
                OnEndPointGidChanging(value);
                ReportPropertyChanging("EndPointGid");
                _EndPointGid = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EndPointGid");
                OnEndPointGidChanged();
            }
        }
        private global::System.String _EndPointGid;
        partial void OnEndPointGidChanging(global::System.String value);
        partial void OnEndPointGidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EndPointFullName
        {
            get
            {
                return _EndPointFullName;
            }
            set
            {
                OnEndPointFullNameChanging(value);
                ReportPropertyChanging("EndPointFullName");
                _EndPointFullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EndPointFullName");
                OnEndPointFullNameChanged();
            }
        }
        private global::System.String _EndPointFullName;
        partial void OnEndPointFullNameChanging(global::System.String value);
        partial void OnEndPointFullNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EndPointShortName
        {
            get
            {
                return _EndPointShortName;
            }
            set
            {
                OnEndPointShortNameChanging(value);
                ReportPropertyChanging("EndPointShortName");
                _EndPointShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EndPointShortName");
                OnEndPointShortNameChanged();
            }
        }
        private global::System.String _EndPointShortName;
        partial void OnEndPointShortNameChanging(global::System.String value);
        partial void OnEndPointShortNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_TripRoutes_Trips", "Trips")]
        public Trips Trips
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trips>("TransportSystemModel.FK_TripRoutes_Trips", "Trips").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trips>("TransportSystemModel.FK_TripRoutes_Trips", "Trips").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trips> TripsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trips>("TransportSystemModel.FK_TripRoutes_Trips", "Trips");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trips>("TransportSystemModel.FK_TripRoutes_Trips", "Trips", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportSystemModel", Name="Trips")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Trips : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Trips.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="tripType">Исходное значение свойства TripType.</param>
        /// <param name="creatorId">Исходное значение свойства CreatorId.</param>
        /// <param name="ownerId">Исходное значение свойства OwnerId.</param>
        /// <param name="tripStatus">Исходное значение свойства TripStatus.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="date">Исходное значение свойства Date.</param>
        /// <param name="seats">Исходное значение свойства Seats.</param>
        /// <param name="freeSeats">Исходное значение свойства FreeSeats.</param>
        public static Trips CreateTrips(global::System.Int32 id, global::System.Int32 tripType, global::System.Int32 creatorId, global::System.Int32 ownerId, global::System.Int32 tripStatus, global::System.Boolean isDeleted, global::System.DateTime date, global::System.Int32 seats, global::System.Int32 freeSeats)
        {
            Trips trips = new Trips();
            trips.Id = id;
            trips.TripType = tripType;
            trips.CreatorId = creatorId;
            trips.OwnerId = ownerId;
            trips.TripStatus = tripStatus;
            trips.IsDeleted = isDeleted;
            trips.Date = date;
            trips.Seats = seats;
            trips.FreeSeats = freeSeats;
            return trips;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TripType
        {
            get
            {
                return _TripType;
            }
            set
            {
                OnTripTypeChanging(value);
                ReportPropertyChanging("TripType");
                _TripType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TripType");
                OnTripTypeChanged();
            }
        }
        private global::System.Int32 _TripType;
        partial void OnTripTypeChanging(global::System.Int32 value);
        partial void OnTripTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorId
        {
            get
            {
                return _CreatorId;
            }
            set
            {
                OnCreatorIdChanging(value);
                ReportPropertyChanging("CreatorId");
                _CreatorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorId");
                OnCreatorIdChanged();
            }
        }
        private global::System.Int32 _CreatorId;
        partial void OnCreatorIdChanging(global::System.Int32 value);
        partial void OnCreatorIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.Int32 _OwnerId;
        partial void OnOwnerIdChanging(global::System.Int32 value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TripStatus
        {
            get
            {
                return _TripStatus;
            }
            set
            {
                OnTripStatusChanging(value);
                ReportPropertyChanging("TripStatus");
                _TripStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TripStatus");
                OnTripStatusChanged();
            }
        }
        private global::System.Int32 _TripStatus;
        partial void OnTripStatusChanging(global::System.Int32 value);
        partial void OnTripStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpectedEndDate
        {
            get
            {
                return _ExpectedEndDate;
            }
            set
            {
                OnExpectedEndDateChanging(value);
                ReportPropertyChanging("ExpectedEndDate");
                _ExpectedEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpectedEndDate");
                OnExpectedEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpectedEndDate;
        partial void OnExpectedEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpectedEndDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarId
        {
            get
            {
                return _CarId;
            }
            set
            {
                OnCarIdChanging(value);
                ReportPropertyChanging("CarId");
                _CarId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarId");
                OnCarIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CarId;
        partial void OnCarIdChanging(Nullable<global::System.Int32> value);
        partial void OnCarIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Seats
        {
            get
            {
                return _Seats;
            }
            set
            {
                OnSeatsChanging(value);
                ReportPropertyChanging("Seats");
                _Seats = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Seats");
                OnSeatsChanged();
            }
        }
        private global::System.Int32 _Seats;
        partial void OnSeatsChanging(global::System.Int32 value);
        partial void OnSeatsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FreeSeats
        {
            get
            {
                return _FreeSeats;
            }
            set
            {
                OnFreeSeatsChanging(value);
                ReportPropertyChanging("FreeSeats");
                _FreeSeats = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreeSeats");
                OnFreeSeatsChanged();
            }
        }
        private global::System.Int32 _FreeSeats;
        partial void OnFreeSeatsChanging(global::System.Int32 value);
        partial void OnFreeSeatsChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Trips_Cars", "Cars")]
        public Cars Cars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cars>("TransportSystemModel.FK_Trips_Cars", "Cars").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cars>("TransportSystemModel.FK_Trips_Cars", "Cars").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cars> CarsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cars>("TransportSystemModel.FK_Trips_Cars", "Cars");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cars>("TransportSystemModel.FK_Trips_Cars", "Cars", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_TripRoutes_Trips", "TripRoutes")]
        public EntityCollection<TripRoutes> TripRoutes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TripRoutes>("TransportSystemModel.FK_TripRoutes_Trips", "TripRoutes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TripRoutes>("TransportSystemModel.FK_TripRoutes_Trips", "TripRoutes", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Trips_TripStatus", "TripStatus")]
        public TripStatus TripStatus1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TripStatus>("TransportSystemModel.FK_Trips_TripStatus", "TripStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TripStatus>("TransportSystemModel.FK_Trips_TripStatus", "TripStatus").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TripStatus> TripStatus1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TripStatus>("TransportSystemModel.FK_Trips_TripStatus", "TripStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TripStatus>("TransportSystemModel.FK_Trips_TripStatus", "TripStatus", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Trips_TripType", "TripType")]
        public TripType TripType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TripType>("TransportSystemModel.FK_Trips_TripType", "TripType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TripType>("TransportSystemModel.FK_Trips_TripType", "TripType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TripType> TripType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TripType>("TransportSystemModel.FK_Trips_TripType", "TripType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TripType>("TransportSystemModel.FK_Trips_TripType", "TripType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Trips_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("TransportSystemModel.FK_Trips_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("TransportSystemModel.FK_Trips_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("TransportSystemModel.FK_Trips_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("TransportSystemModel.FK_Trips_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Trips_Users1", "Users")]
        public Users Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("TransportSystemModel.FK_Trips_Users1", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("TransportSystemModel.FK_Trips_Users1", "Users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> Users1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("TransportSystemModel.FK_Trips_Users1", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("TransportSystemModel.FK_Trips_Users1", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportSystemModel", Name="TripStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TripStatus : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TripStatus.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="statusName">Исходное значение свойства StatusName.</param>
        public static TripStatus CreateTripStatus(global::System.Int32 id, global::System.String statusName)
        {
            TripStatus tripStatus = new TripStatus();
            tripStatus.Id = id;
            tripStatus.StatusName = statusName;
            return tripStatus;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Trips_TripStatus", "Trips")]
        public EntityCollection<Trips> Trips
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trips>("TransportSystemModel.FK_Trips_TripStatus", "Trips");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trips>("TransportSystemModel.FK_Trips_TripStatus", "Trips", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportSystemModel", Name="TripType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TripType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TripType.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="typeName">Исходное значение свойства TypeName.</param>
        public static TripType CreateTripType(global::System.Int32 id, global::System.String typeName)
        {
            TripType tripType = new TripType();
            tripType.Id = id;
            tripType.TypeName = typeName;
            return tripType;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Trips_TripType", "Trips")]
        public EntityCollection<Trips> Trips
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trips>("TransportSystemModel.FK_Trips_TripType", "Trips");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trips>("TransportSystemModel.FK_Trips_TripType", "Trips", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TransportSystemModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Users.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="firstName">Исходное значение свойства FirstName.</param>
        /// <param name="lastName">Исходное значение свойства LastName.</param>
        /// <param name="password">Исходное значение свойства Password.</param>
        public static Users CreateUsers(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.String password)
        {
            Users users = new Users();
            users.Id = id;
            users.FirstName = firstName;
            users.LastName = lastName;
            users.Password = password;
            return users;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Byte> _Age;
        partial void OnAgeChanging(Nullable<global::System.Byte> value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Int32> _Rate;
        partial void OnRateChanging(Nullable<global::System.Int32> value);
        partial void OnRateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlusesNumber
        {
            get
            {
                return _PlusesNumber;
            }
            set
            {
                OnPlusesNumberChanging(value);
                ReportPropertyChanging("PlusesNumber");
                _PlusesNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlusesNumber");
                OnPlusesNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _PlusesNumber;
        partial void OnPlusesNumberChanging(Nullable<global::System.Int32> value);
        partial void OnPlusesNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MinusesNumber
        {
            get
            {
                return _MinusesNumber;
            }
            set
            {
                OnMinusesNumberChanging(value);
                ReportPropertyChanging("MinusesNumber");
                _MinusesNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinusesNumber");
                OnMinusesNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _MinusesNumber;
        partial void OnMinusesNumberChanging(Nullable<global::System.Int32> value);
        partial void OnMinusesNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SuccessTripsNumber
        {
            get
            {
                return _SuccessTripsNumber;
            }
            set
            {
                OnSuccessTripsNumberChanging(value);
                ReportPropertyChanging("SuccessTripsNumber");
                _SuccessTripsNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SuccessTripsNumber");
                OnSuccessTripsNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _SuccessTripsNumber;
        partial void OnSuccessTripsNumberChanging(Nullable<global::System.Int32> value);
        partial void OnSuccessTripsNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FailedTripsNumber
        {
            get
            {
                return _FailedTripsNumber;
            }
            set
            {
                OnFailedTripsNumberChanging(value);
                ReportPropertyChanging("FailedTripsNumber");
                _FailedTripsNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedTripsNumber");
                OnFailedTripsNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _FailedTripsNumber;
        partial void OnFailedTripsNumberChanging(Nullable<global::System.Int32> value);
        partial void OnFailedTripsNumberChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Trips_Users", "Trips")]
        public EntityCollection<Trips> Trips
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trips>("TransportSystemModel.FK_Trips_Users", "Trips");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trips>("TransportSystemModel.FK_Trips_Users", "Trips", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TransportSystemModel", "FK_Trips_Users1", "Trips")]
        public EntityCollection<Trips> Trips1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trips>("TransportSystemModel.FK_Trips_Users1", "Trips");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trips>("TransportSystemModel.FK_Trips_Users1", "Trips", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TransportSystemModel", Name="GetTrips_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetTrips_Result : ComplexObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта GetTrips_Result.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="tripType">Исходное значение свойства TripType.</param>
        /// <param name="creatorId">Исходное значение свойства CreatorId.</param>
        /// <param name="ownerId">Исходное значение свойства OwnerId.</param>
        /// <param name="tripStatus">Исходное значение свойства TripStatus.</param>
        /// <param name="date">Исходное значение свойства Date.</param>
        /// <param name="routeId">Исходное значение свойства RouteId.</param>
        /// <param name="startPointGid">Исходное значение свойства StartPointGid.</param>
        /// <param name="startPointFullName">Исходное значение свойства StartPointFullName.</param>
        /// <param name="startPointShortName">Исходное значение свойства StartPointShortName.</param>
        /// <param name="endPointGid">Исходное значение свойства EndPointGid.</param>
        /// <param name="endPointFullName">Исходное значение свойства EndPointFullName.</param>
        /// <param name="endPointShortName">Исходное значение свойства EndPointShortName.</param>
        public static GetTrips_Result CreateGetTrips_Result(global::System.Int32 id, global::System.Int32 tripType, global::System.Int32 creatorId, global::System.Int32 ownerId, global::System.Int32 tripStatus, global::System.DateTime date, global::System.Int64 routeId, global::System.String startPointGid, global::System.String startPointFullName, global::System.String startPointShortName, global::System.String endPointGid, global::System.String endPointFullName, global::System.String endPointShortName)
        {
            GetTrips_Result getTrips_Result = new GetTrips_Result();
            getTrips_Result.Id = id;
            getTrips_Result.TripType = tripType;
            getTrips_Result.CreatorId = creatorId;
            getTrips_Result.OwnerId = ownerId;
            getTrips_Result.TripStatus = tripStatus;
            getTrips_Result.Date = date;
            getTrips_Result.RouteId = routeId;
            getTrips_Result.StartPointGid = startPointGid;
            getTrips_Result.StartPointFullName = startPointFullName;
            getTrips_Result.StartPointShortName = startPointShortName;
            getTrips_Result.EndPointGid = endPointGid;
            getTrips_Result.EndPointFullName = endPointFullName;
            getTrips_Result.EndPointShortName = endPointShortName;
            return getTrips_Result;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TripType
        {
            get
            {
                return _TripType;
            }
            set
            {
                OnTripTypeChanging(value);
                ReportPropertyChanging("TripType");
                _TripType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TripType");
                OnTripTypeChanged();
            }
        }
        private global::System.Int32 _TripType;
        partial void OnTripTypeChanging(global::System.Int32 value);
        partial void OnTripTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorId
        {
            get
            {
                return _CreatorId;
            }
            set
            {
                OnCreatorIdChanging(value);
                ReportPropertyChanging("CreatorId");
                _CreatorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorId");
                OnCreatorIdChanged();
            }
        }
        private global::System.Int32 _CreatorId;
        partial void OnCreatorIdChanging(global::System.Int32 value);
        partial void OnCreatorIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.Int32 _OwnerId;
        partial void OnOwnerIdChanging(global::System.Int32 value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TripStatus
        {
            get
            {
                return _TripStatus;
            }
            set
            {
                OnTripStatusChanging(value);
                ReportPropertyChanging("TripStatus");
                _TripStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TripStatus");
                OnTripStatusChanged();
            }
        }
        private global::System.Int32 _TripStatus;
        partial void OnTripStatusChanging(global::System.Int32 value);
        partial void OnTripStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpectedEndDate
        {
            get
            {
                return _ExpectedEndDate;
            }
            set
            {
                OnExpectedEndDateChanging(value);
                ReportPropertyChanging("ExpectedEndDate");
                _ExpectedEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpectedEndDate");
                OnExpectedEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpectedEndDate;
        partial void OnExpectedEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpectedEndDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarId
        {
            get
            {
                return _CarId;
            }
            set
            {
                OnCarIdChanging(value);
                ReportPropertyChanging("CarId");
                _CarId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarId");
                OnCarIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CarId;
        partial void OnCarIdChanging(Nullable<global::System.Int32> value);
        partial void OnCarIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RouteId
        {
            get
            {
                return _RouteId;
            }
            set
            {
                OnRouteIdChanging(value);
                ReportPropertyChanging("RouteId");
                _RouteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RouteId");
                OnRouteIdChanged();
            }
        }
        private global::System.Int64 _RouteId;
        partial void OnRouteIdChanging(global::System.Int64 value);
        partial void OnRouteIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StartPointGid
        {
            get
            {
                return _StartPointGid;
            }
            set
            {
                OnStartPointGidChanging(value);
                ReportPropertyChanging("StartPointGid");
                _StartPointGid = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StartPointGid");
                OnStartPointGidChanged();
            }
        }
        private global::System.String _StartPointGid;
        partial void OnStartPointGidChanging(global::System.String value);
        partial void OnStartPointGidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StartPointFullName
        {
            get
            {
                return _StartPointFullName;
            }
            set
            {
                OnStartPointFullNameChanging(value);
                ReportPropertyChanging("StartPointFullName");
                _StartPointFullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StartPointFullName");
                OnStartPointFullNameChanged();
            }
        }
        private global::System.String _StartPointFullName;
        partial void OnStartPointFullNameChanging(global::System.String value);
        partial void OnStartPointFullNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StartPointShortName
        {
            get
            {
                return _StartPointShortName;
            }
            set
            {
                OnStartPointShortNameChanging(value);
                ReportPropertyChanging("StartPointShortName");
                _StartPointShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StartPointShortName");
                OnStartPointShortNameChanged();
            }
        }
        private global::System.String _StartPointShortName;
        partial void OnStartPointShortNameChanging(global::System.String value);
        partial void OnStartPointShortNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EndPointGid
        {
            get
            {
                return _EndPointGid;
            }
            set
            {
                OnEndPointGidChanging(value);
                ReportPropertyChanging("EndPointGid");
                _EndPointGid = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EndPointGid");
                OnEndPointGidChanged();
            }
        }
        private global::System.String _EndPointGid;
        partial void OnEndPointGidChanging(global::System.String value);
        partial void OnEndPointGidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EndPointFullName
        {
            get
            {
                return _EndPointFullName;
            }
            set
            {
                OnEndPointFullNameChanging(value);
                ReportPropertyChanging("EndPointFullName");
                _EndPointFullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EndPointFullName");
                OnEndPointFullNameChanged();
            }
        }
        private global::System.String _EndPointFullName;
        partial void OnEndPointFullNameChanging(global::System.String value);
        partial void OnEndPointFullNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EndPointShortName
        {
            get
            {
                return _EndPointShortName;
            }
            set
            {
                OnEndPointShortNameChanging(value);
                ReportPropertyChanging("EndPointShortName");
                _EndPointShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EndPointShortName");
                OnEndPointShortNameChanged();
            }
        }
        private global::System.String _EndPointShortName;
        partial void OnEndPointShortNameChanging(global::System.String value);
        partial void OnEndPointShortNameChanged();

        #endregion

    }

    #endregion

    
}
